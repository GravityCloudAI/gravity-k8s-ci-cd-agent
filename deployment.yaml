apiVersion: apps/v1
kind: Deployment
metadata:
  name: gravity-ci-cd-agent
  namespace: gravity
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gravity-ci-cd-agent
  template:
    metadata:
      labels:
        app: gravity-ci-cd-agent
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox:1.28
          command: ['sh', '-c', 'until nc -z $POSTGRES_HOST 5432; do echo waiting for postgres; sleep 2; done;']
          env:
            - name: POSTGRES_HOST
              value: "${POSTGRES_HOST}"
      containers:
        - name: gravity-ci-cd-agent
          image: gravitycloud/gravity-ci-cd-agent:latest
          imagePullPolicy: Always
          securityContext:
            privileged: true
            capabilities:
              add:
                - SYS_ADMIN
          volumeMounts:
          - name: buildah-storage
            mountPath: /var/lib/containers
          - name: cgroup
            mountPath: /sys/fs/cgroup
            readOnly: true
          env:
            - name: GRAVITY_API_KEY # OPTIONAL: To sync logs, errors, and reports with Gravity UI
              value: "${GRAVITY_API_KEY}"
            - name: GRAVITY_WEBSOCKET_URL # OPTIONAL: To sync logs, errors, and reports with Gravity UI
              value: "${GRAVITY_WEBSOCKET_URL}"
            - name: ENV
              value: "${ENV}"
            - name: GITHUB_TOKEN
              value: "${GITHUB_TOKEN}"
            - name: GITHUB_REPOSITORIES
              value: "${GITHUB_REPOSITORIES}"
            - name: GIT_BRANCHES_ALLOWED
              value: "${GIT_BRANCHES_ALLOWED}"
            - name: AWS_ACCESS_KEY_ID
              value: "${AWS_ACCESS_KEY_ID}"
            - name: AWS_SECRET_ACCESS_KEY
              value: "${AWS_SECRET_ACCESS_KEY}"
            - name: AWS_ACCOUNT_ID
              value: "${AWS_ACCOUNT_ID}"
            - name: POSTGRES_HOST
              value: "${POSTGRES_HOST}"
            - name: POSTGRES_USER
              value: "${POSTGRES_USER}"
            - name: POSTGRES_PASSWORD
              value: "${POSTGRES_PASSWORD}"
            - name: POSTGRES_DB
              value: "${POSTGRES_DB}"
            - name: POSTGRES_PORT
              value: "${POSTGRES_PORT:-5432}"
            - name: SLACK_WEBHOOK_URL # OPTIONAL: To send notifications to Slack
              value: "${SLACK_WEBHOOK_URL}"
          resources:
            requests:
              memory: "2048Mi"
              cpu: "1000m"
            limits:
              memory: "4096Mi"
              cpu: "2000m"
      volumes:
        - name: buildah-storage
          emptyDir:
            sizeLimit: 10Gi
        - name: cgroup
          hostPath:
            path: /sys/fs/cgroup
            type: Directory
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-gravity
  namespace: gravity
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-gravity
  template:
    metadata:
      labels:
        app: postgres-gravity
    spec:
      containers:
        - name: postgres-gravity
          image: postgres:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_DB
              value: "${POSTGRES_DB}"
            - name: POSTGRES_USER
              value: "${POSTGRES_USER}"
            - name: POSTGRES_PASSWORD
              value: "${POSTGRES_PASSWORD}"
          ports:
            - containerPort: 5432
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
          volumeMounts:
            - name: postgres-gravity-storage
              mountPath: /var/lib/postgresql/data
              subPath: postgres
      volumes:
        - name: postgres-gravity-storage
          persistentVolumeClaim:
            claimName: postgres-gravity-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-gravity-service
  namespace: gravity
spec:
  selector:
    app: postgres-gravity
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-gravity-pvc
  namespace: gravity
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard
